name: Sync CMS Data to HTML

on:
  push:
    paths:
      - 'content/homepage.yml'
      - 'content/**'

permissions:
  contents: write
  actions: read

jobs:
  sync-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install yq for YAML parsing
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Sync homepage data to index.html
        run: |
          if [ -f "content/homepage.yml" ]; then
            echo "🔄 Syncing homepage data to index.html..."
            
            # YAML에서 데이터 추출
            HERO_TITLE=$(yq e '.hero.title' content/homepage.yml)
            HERO_SUBTITLE=$(yq e '.hero.subtitle' content/homepage.yml)
            HERO_DESCRIPTION=$(yq e '.hero.description' content/homepage.yml)
            HERO_CTA_TEXT=$(yq e '.hero.cta_text' content/homepage.yml)
            HERO_CTA_LINK=$(yq e '.hero.cta_link' content/homepage.yml)
            HERO_BG_IMAGE=$(yq e '.hero.background_image' content/homepage.yml)
            
            REP_TITLE=$(yq e '.representative.title' content/homepage.yml)
            REP_NAME=$(yq e '.representative.name' content/homepage.yml)
            REP_POSITION=$(yq e '.representative.position' content/homepage.yml)
            REP_PHOTO=$(yq e '.representative.photo' content/homepage.yml)
            
            # 인사말 메시지들 추출 (첫 3개)
            MSG1=$(yq e '.representative.messages[0]' content/homepage.yml)
            MSG2=$(yq e '.representative.messages[1]' content/homepage.yml)
            MSG3=$(yq e '.representative.messages[2]' content/homepage.yml)
            
            # 사이트 정보
            SITE_TITLE=$(yq e '.site.title' content/homepage.yml)
            
            echo "✅ Data extracted from YAML"
            echo "Hero Title: $HERO_TITLE"
            echo "Hero Subtitle: $HERO_SUBTITLE"
            
            # index.html 백업
            cp index.html index.html.backup
            
            # 원본 구조에 맞는 업데이트
            # 1. 사이트 제목 (title 태그와 네비게이션)
            sed -i "s|<title>.*</title>|<title>$SITE_TITLE</title>|g" index.html
            sed -i "s|<h1 class=\"text-2xl font-bold text-red-600\">.*<span|<h1 class=\"text-2xl font-bold text-red-600\">$HERO_TITLE <span|g" index.html
            
            # 2. 히어로 섹션 제목 (복잡한 인라인 스타일 포함)
            sed -i "s|<span style=\"font-weight: 700;\">.*</span><br>.*|<span style=\"font-weight: 700;\">$HERO_TITLE</span><br>$HERO_SUBTITLE|g" index.html
            
            # 3. 히어로 섹션 설명
            sed -i "s|국민과 함께 더 나은 대한민국을 만들기 위한<br>새로운 정치의 시작을 준비하고 있습니다\.|$HERO_DESCRIPTION|g" index.html
            
            # 4. CTA 버튼 텍스트
            sed -i "s|신당 가입하기|$HERO_CTA_TEXT|g" index.html
            
            # 5. 배경 이미지 URL
            sed -i "s|background-image: url('hero_bg\.png?v=6')|background-image: url('$HERO_BG_IMAGE')|g" index.html
            
            echo "✅ index.html updated with new data"
            
            # 변경사항 확인
            if ! diff -q index.html index.html.backup > /dev/null; then
              echo "✅ Changes detected in index.html"
            else
              echo "ℹ️ No changes needed in index.html"
            fi
            
            rm index.html.backup
          else
            echo "❌ content/homepage.yml not found"
          fi

      - name: Commit and push if changed
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add index.html
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "🔄 자동 동기화: CMS 홈페이지 데이터 → index.html 반영"
            git push
            echo "✅ Changes pushed to repository"
          fi 